# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('urbanuavmobility', ['mobility'])
    module.source = [
        'model/graph-mobility-model.cc',
        'model/Graph.cc',
        'model/GraphNode.cc',
        'model/uav.cc',
        'model/base.cc',
        'model/uav-energy-model.cc',
        'model/uav-mobility-model.cc',
        'model/uav-application.cc',
        'model/uav-mode-header.cc',
        'model/uav-edges-header.cc',
        'model/uav-random-waypoint.cc',
        'model/uav-srcm.cc',
        'model/uav-manhattan.cc',
        'model/Util.cc',
        'helper/uav-container.cc',
        'helper/urbanuavmobility-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('urbanuavmobility')
    module_test.source = [
        'test/urbanuavmobility-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'urbanuavmobility'
    headers.source = [
        'model/graph-mobility-model.h',
        'model/Graph.h',
        'model/GraphNode.h',
        'model/Visitor.h',
        'model/uav.h',
        'model/base.h',
        'model/uav-energy-model.h',
        'model/uav-mobility-model.h',
        'model/uav-application.h',
        'model/uav-mode-header.h',
        'model/uav-edges-header.h',
        'model/uav-random-waypoint.h',
        'model/uav-srcm.h',
        'model/uav-manhattan.h',
        'model/Util.h',
        'helper/urbanuavmobility-helper.h',
        'helper/uav-container.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

